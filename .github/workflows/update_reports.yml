# Nome do nosso fluxo de trabalho de automação
name: Atualizar Relatórios JSON

# Aciona a automação quando recebe um sinal do nosso site
on:
  repository_dispatch:
    types: [add-new-report]

# Define os trabalhos a serem executados
jobs:
  update-files:
    runs-on: ubuntu-latest
    steps:
      # 1. Faz o checkout do código do repositório
      - name: Checkout do repositório
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      # 2. Cria o novo ficheiro de dados do relatório
      - name: Criar o ficheiro do novo relatório
        run: |
          echo '${{ github.event.client_payload.report_data }}' > ${{ github.event.client_payload.report_filename }}
        shell: bash

      # 3. Lê o reports.json existente (ou cria um array vazio se não existir)
      - name: Ler o reports.json existente
        id: read_json
        run: |
          if [ -f "reports.json" ]; then
            content=$(cat reports.json)
            echo "content=$content" >> $GITHUB_OUTPUT
          else
            echo "content=[]" >> $GITHUB_OUTPUT
          fi
        shell: bash

      # 4. Adiciona a nova entrada ao conteúdo JSON existente
      - name: Adicionar nova entrada ao JSON
        id: update_json
        uses: sergey-z/jq-action@v2.2
        with:
          # A ferramenta 'jq' é usada para manipular o JSON de forma segura
          # Ela remove qualquer entrada antiga com a mesma data e adiciona a nova
          jq: '[ .[] | select(.date != "${{ github.event.client_payload.report_date }}") ] + [{"date": "${{ github.event.client_payload.report_date }}", "file": "${{ github.event.client_payload.report_filename }}"}]'
          json: '${{ steps.read_json.outputs.content }}'

      # 5. Salva o novo conteúdo combinado no ficheiro reports.json
      - name: Escrever o reports.json atualizado
        run: |
          echo '${{ steps.update_json.outputs.value }}' > reports.json
        shell: bash

      # 6. Faz o commit de todos os ficheiros novos ou alterados
      - name: Fazer o commit dos novos ficheiros
        run: |
          git config --global user.name 'Relatorios-Action-Bot'
          git config --global user.email 'actions@github.com'
          git add .
          git commit -m "Adiciona novo relatório de ${{ github.event.client_payload.report_date }}" || echo "Nenhuma alteração para fazer commit"
          git push
