# Ficheiro: .github/workflows/update_reports.yml

name: Atualizar Relatórios JSON

on:
  repository_dispatch:
    types: [add-new-report]

jobs:
  update-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Instalar o jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Criar o ficheiro do novo relatório
        run: |
          echo '${{ github.event.client_payload.report_data }}' > ${{ github.event.client_payload.report_filename }}
        shell: bash

      # ✅ LÓGICA CORRIGIDA E MAIS SEGURA
      - name: Atualizar o reports.json
        run: |
          # Tenta ler o ficheiro existente. Se falhar (ex: ficheiro não existe ou está vazio), usa um array '[]' como base.
          json_content=$(cat reports.json 2>/dev/null || echo "[]")

          # Usa jq para adicionar o novo relatório, remover duplicados pela data, e ordenar
          updated_json=$(echo "$json_content" | jq '[ .[] | select(.date != "${{ github.event.client_payload.report_date }}") ] + [{"date": "${{ github.event.client_payload.report_date }}", "file": "${{ github.event.client_payload.report_filename }}"}] | sort_by(.date | split("/") | .[2], .[1], .[0]) | reverse')
          
          # Escreve o conteúdo final e bem formatado de volta para o ficheiro
          echo "$updated_json" > reports.json
        shell: bash

      - name: Fazer o commit dos novos ficheiros
        run: |
          git config --global user.name 'Relatorios-Action-Bot'
          git config --global user.email 'actions@github.com'
          git add .
          if git diff --staged --quiet; then
            echo "Nenhuma alteração para fazer commit."
          else
            git commit -m "Adiciona/Atualiza relatório de ${{ github.event.client_payload.report_date }}"
            git push
          fi
        shell: bash
